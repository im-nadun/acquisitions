name: Tests

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: postgresql://test:test@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: test
        run: npm test -- --coverage --coverageReporters=json-summary --coverageReporters=text --coverageReporters=lcov
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.test.outcome }}" == "success" ]; then
            echo "### ✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check if coverage summary exists
          if [ -f coverage/coverage-summary.json ]; then
            echo "### 📊 Coverage Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract coverage percentages using node
            node -e "
              const fs = require('fs');
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              
              console.log('| Metric | Coverage |');
              console.log('|--------|----------|');
              console.log(\`| Lines | \${total.lines.pct}% |\`);
              console.log(\`| Statements | \${total.statements.pct}% |\`);
              console.log(\`| Functions | \${total.functions.pct}% |\`);
              console.log(\`| Branches | \${total.branches.pct}% |\`);
            " >> $GITHUB_STEP_SUMMARY
          else
            echo "Coverage report not available" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 Coverage reports uploaded as artifacts (retention: 30 days)" >> $GITHUB_STEP_SUMMARY

      - name: Annotate test failures
        if: steps.test.outcome == 'failure'
        run: |
          echo "::error::Tests failed. Please check the test output above for details."
          exit 1

      - name: Check test outcome
        if: steps.test.outcome == 'failure'
        run: exit 1
